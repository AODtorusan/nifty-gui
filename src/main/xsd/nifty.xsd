<?xml version="1.0" encoding="UTF-8"?>
<xs:schema attributeFormDefault="unqualified"
  elementFormDefault="qualified"
  targetNamespace='http://nifty-gui.sourceforge.net/nifty.xsd'
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:nifty="http://nifty-gui.sourceforge.net/nifty.xsd">
  <xs:element name="screen" type="nifty:screenType" />
  <xs:complexType name="elementType" abstract="true">
    <xs:complexContent>
      <xs:extension base="nifty:elementTypeBase">
        <xs:sequence>
          <xs:element name="interact" type="nifty:interactType"
            maxOccurs="1" minOccurs="0">
          </xs:element>
          <xs:element name="hover" type="nifty:elementHoverType"
            maxOccurs="1" minOccurs="0">
          </xs:element>
          <xs:element name="effect" type="nifty:effectsType"
            minOccurs="0" maxOccurs="1">
          </xs:element>
          <xs:element ref="nifty:elementBase" minOccurs="0"
            maxOccurs="unbounded">
          </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"></xs:attribute>
        <xs:attribute name="width" type="nifty:widthType"></xs:attribute>
        <xs:attribute name="height" type="nifty:heightType"></xs:attribute>
        <xs:attribute name="align" type="nifty:alignType"></xs:attribute>
        <xs:attribute name="valign" type="nifty:valignType"></xs:attribute>
        <xs:attribute name="childLayout" type="nifty:layoutType"></xs:attribute>
        <xs:attribute name="childClip" type="xs:boolean"></xs:attribute>
        <xs:attribute name="backgroundImage" type="xs:string"></xs:attribute>
        <xs:attribute name="backgroundColor" type="nifty:colorType"></xs:attribute>
        <xs:attribute name="visibleToMouse" type="xs:boolean"></xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="panelType">
    <xs:complexContent>
      <xs:extension base="nifty:elementType"></xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="imageType">
    <xs:complexContent>
      <xs:extension base="nifty:elementType">
        <xs:attribute type="xs:string" name="filename" use="required" />
        <xs:attribute name="x" type="xs:int" use="optional"></xs:attribute>
        <xs:attribute name="y" type="xs:int" use="optional"></xs:attribute>
        <xs:attribute name="filter" type="xs:boolean" use="optional"></xs:attribute>
        <xs:attribute name="subImageSizeMode">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="scale"></xs:enumeration>
              <xs:enumeration value="resizeHint"></xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="resizeHint" type="xs:string"></xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="screenType">
    <xs:sequence>
      <xs:element name="layerGroup" maxOccurs="unbounded"
        minOccurs="0">
        <xs:complexType>
          <xs:attribute name="id" type="xs:string"></xs:attribute>
          <xs:attribute name="alternate" type="xs:string"></xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element type="nifty:layerType" name="layer"
        maxOccurs="unbounded" minOccurs="1" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:string"></xs:attribute>
    <xs:attribute name="controller" type="xs:string"></xs:attribute>
    <xs:attribute name="effectGroup" type="xs:string"></xs:attribute>
  </xs:complexType>
  <xs:complexType name="effectType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string"></xs:attribute>
        <xs:attribute name="post" type="nifty:postType"></xs:attribute>
        <xs:attribute name="alternateEnable" type="xs:string"></xs:attribute>
        <xs:attribute name="alternateDisable" type="xs:string"></xs:attribute>
        <xs:attribute name="inherit" type="xs:boolean" use="optional"></xs:attribute>
        <xs:anyAttribute namespace="##local" processContents="skip">
        </xs:anyAttribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="colorType">
    <xs:restriction base="xs:string">
      <xs:pattern value="#[a-z,0-9]{8,8}"></xs:pattern>
      <xs:pattern value="#[a-z,0-9]{4,4}"></xs:pattern>
      <xs:minLength value="5"></xs:minLength>
      <xs:maxLength value="9"></xs:maxLength>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="layoutType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="vertical"></xs:enumeration>
      <xs:enumeration value="center"></xs:enumeration>
      <xs:enumeration value="absolute"></xs:enumeration>
      <xs:enumeration value="horizontal"></xs:enumeration>
      <xs:enumeration value="overlay"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="directionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="top"></xs:enumeration>
      <xs:enumeration value="bottom"></xs:enumeration>
      <xs:enumeration value="left"></xs:enumeration>
      <xs:enumeration value="right"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="textType">
    <xs:complexContent>
      <xs:extension base="nifty:elementType">
        <xs:attribute name="text" type="xs:string" use="required"></xs:attribute>
        <xs:attribute name="layout" type="nifty:layoutType"
          use="optional">
        </xs:attribute>
        <xs:attribute name="font" type="xs:string"></xs:attribute>
        <xs:attribute name="color" type="nifty:colorType"></xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="element" type="nifty:elementTypeBase"
    substitutionGroup="nifty:elementBase">
  </xs:element>
  <xs:element name="panel" type="nifty:panelType"
    substitutionGroup="nifty:elementBase">
  </xs:element>
  <xs:element name="text" type="nifty:textType"
    substitutionGroup="nifty:elementBase">
  </xs:element>
  <xs:element name="image" type="nifty:imageType"
    substitutionGroup="nifty:elementBase">
  </xs:element>
  <xs:simpleType name="alignType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="left"></xs:enumeration>
      <xs:enumeration value="center"></xs:enumeration>
      <xs:enumeration value="right"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="widthType">
    <xs:restriction base="xs:string"></xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="heightType">
    <xs:restriction base="xs:string"></xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="valignType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="top"></xs:enumeration>
      <xs:enumeration value="center"></xs:enumeration>
      <xs:enumeration value="bottom"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="menu" type="nifty:menuType"
    substitutionGroup="nifty:elementBase">
  </xs:element>
  <xs:complexType name="menuType">
    <xs:complexContent>
      <xs:extension base="nifty:elementType">
        <xs:attribute name="font" type="xs:string"></xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="menuItemType">
    <xs:complexContent>
      <xs:extension base="nifty:elementType">
        <xs:attribute name="text" type="xs:string"></xs:attribute>
        <xs:attribute name="color" type="nifty:colorType"></xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="menuItem" type="nifty:menuItemType"
    substitutionGroup="nifty:elementBase">
  </xs:element>
  <xs:complexType name="layerType" block="#all">
    <xs:complexContent>
      <xs:extension base="nifty:panelType"></xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="effectsType">
    <xs:sequence>
      <xs:element name="onStartScreen" type="nifty:effectType"
        maxOccurs="unbounded" minOccurs="0">
      </xs:element>
      <xs:element name="onEndScreen" type="nifty:effectType"
        maxOccurs="unbounded" minOccurs="0">
      </xs:element>
      <xs:element name="onHover" type="nifty:effectType"
        maxOccurs="unbounded" minOccurs="0">
      </xs:element>
      <xs:element name="onClick" type="nifty:effectType"
        maxOccurs="unbounded" minOccurs="0">
      </xs:element>
      <xs:element name="onFocus" type="nifty:effectType"
        maxOccurs="unbounded" minOccurs="0">
      </xs:element>
      <xs:element name="onActive" type="nifty:effectType"
        maxOccurs="unbounded" minOccurs="0">
      </xs:element>
    </xs:sequence>
    <xs:attribute name="effectGroup" type="xs:string"></xs:attribute>
    <xs:attribute name="effectGroupOverride" type="xs:string"></xs:attribute>
  </xs:complexType>
  <xs:element name="nifty" type="nifty:niftyType"></xs:element>
  <xs:complexType name="niftyType">
    <xs:sequence>
      <xs:element name="registerEffect" type="nifty:registerEffectType"
        maxOccurs="unbounded" minOccurs="0">
      </xs:element>
      <xs:element name="registerSound" type="nifty:registerSoundType"
        maxOccurs="unbounded" minOccurs="0">
      </xs:element>
      <xs:element name="registerMusic" type="nifty:registerMusicType"
        maxOccurs="unbounded" minOccurs="0">
      </xs:element>
      <xs:element name="controlDefinition"
        type="nifty:controlDefinition" maxOccurs="unbounded"
        minOccurs="0">
      </xs:element>
      <xs:element name="screen" type="nifty:screenType"
        maxOccurs="unbounded" minOccurs="1">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="registerEffectType">
    <xs:attribute name="name" type="xs:string"></xs:attribute>
    <xs:attribute name="class" type="xs:string"></xs:attribute>
  </xs:complexType>
  <xs:simpleType name="hoverFalloffType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="none"></xs:enumeration>
      <xs:enumeration value="linear"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="hoverFalloffConstraintType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="none"></xs:enumeration>
      <xs:enumeration value="vertical"></xs:enumeration>
      <xs:enumeration value="horizontal"></xs:enumeration>
      <xs:enumeration value="done"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="postType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="true"></xs:enumeration>
      <xs:enumeration value="false"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="registerSoundType">
    <xs:attribute name="id" type="xs:string"></xs:attribute>
    <xs:attribute name="filename" type="xs:string"></xs:attribute>
  </xs:complexType>
  <xs:complexType name="registerMusicType">
    <xs:attribute name="id" type="xs:string"></xs:attribute>
    <xs:attribute name="filename" type="xs:string"></xs:attribute>
  </xs:complexType>
  <xs:complexType name="controlDefinition">
    <xs:sequence>
      <xs:element ref="nifty:elementBase" maxOccurs="unbounded"
        minOccurs="0">
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string"></xs:attribute>
    <xs:attribute name="controller" type="xs:string"></xs:attribute>
  </xs:complexType>
  <xs:complexType name="controlType">
    <xs:complexContent>
      <xs:extension base="nifty:elementType">
        <xs:attribute name="name" type="xs:string"></xs:attribute>
        <xs:attribute name="onChange" type="xs:string"></xs:attribute>
        <xs:anyAttribute processContents="skip"
          namespace="##targetNamespace">
        </xs:anyAttribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="control" type="nifty:controlType"
    substitutionGroup="nifty:elementBase">
  </xs:element>
  <xs:element name="elementBase" type="nifty:elementTypeBase"></xs:element>
  <xs:complexType name="elementTypeBase"></xs:complexType>
  <xs:complexType name="elementHoverType">
    <xs:attribute name="width" type="nifty:widthType"></xs:attribute>
    <xs:attribute name="height" type="nifty:heightType"></xs:attribute>
    <xs:attribute name="falloffType" type="nifty:hoverFalloffType"></xs:attribute>
    <xs:attribute name="falloffConstraint"
      type="nifty:hoverFalloffConstraintType">
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="interactType">
    <xs:attribute name="onClick" type="nifty:onClickType"></xs:attribute>
    <xs:attribute name="onClickRepeat" type="nifty:onClickType"></xs:attribute>
    <xs:attribute name="onClickMouseMove" type="nifty:onClickType"></xs:attribute>
    <xs:attribute name="onClickAlternateKey" type="xs:string"></xs:attribute>
  </xs:complexType>
  <xs:simpleType name="onClickType">
    <xs:restriction base="xs:string">
      <xs:pattern value="\w+\((|\w+(,\s*\w+)*)\)"></xs:pattern>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>