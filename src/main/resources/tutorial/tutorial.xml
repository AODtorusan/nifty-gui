<?xml version="1.0" encoding="UTF-8"?>
<nifty>
  <registerSound id="select" filename="tutorial/sound/select.wav" />
  <registerSound id="intro" filename="tutorial/sound/intro.wav" />
  <registerSound id="hover" filename="tutorial/sound/hover.wav" />
  <registerMusic id="music" filename="tutorial/sound/echoed_-_L.O.R.D..ogg" />
  <registerEffect name="snowEffect" class="de.lessvoid.nifty.examples.tutorial.SnowEffect" />

  <!-- background style -->
  <style id="background">
    <attributes childLayout="vertical" width="100%" height="100%" />
    <effect>
      <onStartScreen name="fade" start="#0" end="#f" length="750" startDelay="1000" />
      <onActive name="gradient" direction="vertical">
        <value offset="0%" color="#000f" />
        <value offset="80%" color="#f00f" />
        <value offset="100%" color="#000f" />
      </onActive>
      <onActive name="pulsate" period="25000" pulsateType="sinRaised" startColor="#0000" endColor="#000f" changeColorOnly="true" startDelay="2000" />
      <onActive name="gradient" direction="vertical" startDelay="2000">
        <value offset="0%" color="#000f" />
        <value offset="20%" color="#0aff" />
        <value offset="100%" color="#000f" />
      </onActive>
    </effect>
  </style>

  <!-- top style -->
  <style id="top">
    <attributes width="100%" height="14%" childLayout="center" align="center" valign="center"/>
    <effect>
      <onStartScreen name="move" mode="in" direction="right" length="750" startDelay="1000" inherit="true" post="true" />
      <onActive name="gradient" direction="vertical" post="true">
        <value offset="99%" color="#000f" />
        <value offset="100%" color="#ffff" />
      </onActive>
    </effect>
  </style>

  <style id="topInternal">
    <attributes width="95%" height="100%" childLayout="horizontal" align="center" valign="center" />
  </style>

  <!-- main style -->
  <style id="main">
    <attributes width="100%" height="*" childLayout="center" valign="center" align="center" />
  </style>

  <!-- bottom style -->
  <style id="bottom">
    <attributes width="100%" height="14%" childLayout="center" align="center" valign="center" />
    <effect>
      <onStartScreen name="move" mode="in" direction="left" length="750" startDelay="1000" inherit="true" post="true" />
      <onActive name="gradient" direction="vertical" post="true">
        <value offset="0%" color="#ffff" />
        <value offset="1%" color="#000f" />
      </onActive>
    </effect>
  </style>

  <style id="bottomInternal">
    <attributes width="95%" height="100%" childLayout="horizontal" align="center" valign="center" />
  </style>

  <style id="backButton">
    <attributes filename="tutorial/buttons/back.png" align="left" valign="center" visibleToMouse="true" visible="false" />
    <interact onClick="back()" />
    <effect>
      <onStartScreen name="fade" start="#0" end="#f" length="500" startDelay="2000"/>
      <onClick name="imageOverlay" post="true" filename="tutorial/buttons/back-click.png"/>
      <onHover name="imageOverlay" post="true" filename="tutorial/buttons/back-hover.png">
        <hover hoverFalloffType="linear" hoverFalloffConstraint="both" hoverWidth="150%" hoverHeight="150%"/>
      </onHover> 
      <onClick name="playSound" sound="select" />
    </effect>
  </style>

  <style id="nextButton">
    <attributes filename="tutorial/buttons/next.png" align="right" valign="center" visibleToMouse="true" />
    <interact onClick="next()" />
    <effect>
      <onStartScreen name="fade" start="#0" end="#f" length="500" startDelay="2000"/>
      <onClick name="imageOverlay" post="true" filename="tutorial/buttons/next-click.png"/>
      <onHover name="imageOverlay" post="true" filename="tutorial/buttons/next-hover.png">
        <hover hoverFalloffType="linear" hoverFalloffConstraint="both" hoverWidth="150%" hoverHeight="150%"/>
      </onHover> 
      <onClick name="playSound" sound="select" />
    </effect>
  </style>

  <style id="muteButtonSoundOn">
    <attributes filename="tutorial/buttons/mute-off.png" align="right" valign="center" visibleToMouse="true" />
    <interact onClick="toggleMute()" />
    <effect>
      <onStartScreen name="fade" start="#0" end="#f" length="500" startDelay="2000"/>
      <onHover name="imageOverlay" post="true" filename="tutorial/buttons/mute-hover.png">
        <hover hoverFalloffType="linear" hoverFalloffConstraint="both" hoverWidth="150%" hoverHeight="150%"/>
      </onHover> 
      <onClick name="imageOverlay" post="true" filename="tutorial/buttons/mute-off-click.png"/>
      <onClick name="playSound" sound="select" />
    </effect>
  </style>

  <style id="muteButtonSoundOff">
    <attributes filename="tutorial/buttons/mute-on.png" align="right" valign="center" visibleToMouse="true" />
    <interact onClick="toggleMute()" />
    <effect>
      <onStartScreen name="fade" start="#0" end="#f" length="500" startDelay="2000"/>
      <onHover name="imageOverlay" post="true" filename="tutorial/buttons/mute-hover.png">
        <hover hoverFalloffType="linear" hoverFalloffConstraint="both" hoverWidth="150%" hoverHeight="150%"/>
      </onHover> 
      <onClick name="imageOverlay" post="true" filename="tutorial/buttons/mute-on-click.png"/>
      <onClick name="playSound" sound="select" />
    </effect>
  </style>

  <style id="captionFont">
    <attributes font="tutorial/fonts/caption.fnt" width="100%" textHAlign="left" />
  </style>

  <style id="textFont">
    <attributes font="tutorial/fonts/text.fnt" width="100%" textHAlign="left" wrap="true" />
  </style>

  <style id="codeFont">
    <attributes font="tutorial/fonts/code.fnt" width="100%" textHAlign="left" />
  </style>

  <style id="codeBlock">
    <attributes childLayout="vertical" padding="8px" />
    <effect>
      <onActive name="border" post="true" color="#000f" border="1px" />
      <onActive name="gradient" direction="vertical">
        <value offset="0%" color="#eeef" />
        <value offset="100%" color="#999f" />
      </onActive>
    </effect>
  </style>

  <style id="pagePanel">
    <attributes childLayout="center" valign="center" align="center" width="100%" height="100%" />
  </style>

  <style id="middlePanel">
    <attributes childLayout="vertical" width="95%" height="92%" align="center" valign="center" />
	  <effect>
 	    <onStartScreen name="fade" startColor="#0000" endColor="#000f" length="500" startDelay="0" inherit="true" />
      <onEndScreen name="move" mode="out" direction="left" length="500" startDelay="0" inherit="true" alternateDisable="back" />
      <onEndScreen name="move" mode="out" direction="right" length="500" startDelay="0" inherit="true" alternateEnable="back" /> 
      <onEndScreen name="fade" startColor="#ffffffff" endColor="#ffffff00" length="500" startDelay="0" inherit="true" />
	  </effect>
	</style>

	<!-- splash -->
  <screen id="start" controller="de.lessvoid.nifty.examples.tutorial.screen.Splash">
    <layer id="logo" childLayout="center">
      <panel height="60%" childLayout="center" valign="center">
        <image filename="intro-logo.png" valign="center" align="center">
          <effect>
            <onStartScreen name="playSound" sound="intro" length="1200" startDelay="100"/>
            <onStartScreen name="fade" neverStopRendering="true">
              <value time="0" value="0.0" />
              <value time="600" value="1.0" />
              <value time="1200" value="0.0" />
            </onStartScreen>
            <onStartScreen name="imageSize" neverStopRendering="true">
              <value time="0" value="0.7" />
              <value time="600" value="1.0" />
              <value time="1200" value="1.3" />
            </onStartScreen>
          </effect>
        </image>
      </panel>
    </layer>
  </screen>

  <!-- main page screen -->
  <screen id="mainPage" controller="de.lessvoid.nifty.examples.tutorial.screen.MainPage">
    <layer childLayout="center">
      <panel style="background">
        <panel style="top">
          <panel style="topInternal">
            <panel width="*" />
            <image id="nextButton2" style="nextButton" />
            <panel width="8px" />
            <image id="muteButton" style="muteButtonSoundOn" />
          </panel>
        </panel>
        <panel style="main" >
          <panel id="pp" childLayout="overlay" valign="center" align="center" width="100%" height="100%" />
        </panel>
        <panel style="bottom">
          <panel style="bottomInternal">
            <image id="backButton" style="backButton" />
            <panel width="*" />
            <image id="nextButton" style="nextButton" />
          </panel>
        </panel>
      </panel>
      <effect>
         <onActive name="playSound" sound="music" post="true" repeat="true" volume="25%" />
      </effect>
    </layer>
    <layer id="snow">
      <effect>
        <onActive name="snowEffect" post="true" />
      </effect>
    </layer>
  </screen>

  <!-- page 1 -->
  <controlDefinition name="page1" controller="de.lessvoid.nifty.controls.button.controller.ButtonControl">
    <panel style="pagePanel">
		  <panel childLayout="vertical" align="center" valign="center">
		    <text style="captionFont" textHAlign="center" align="center" text="Nifty GUI, Introduction &amp; Tutorial">
		      <effect>
		        <onStartScreen name="textSize" length="300" startDelay="800" factor="2" startSize="1.5" endSize="1.0" />
		        <onStartScreen name="fade" startColor="#ffffff00" endColor="#ffffffff" length="300" startDelay="800" />
            <onEndScreen name="fade" startColor="#ffffffff" endColor="#ffffff00" length="500" startDelay="0" />
		        <onEndScreen name="move" mode="out" direction="left" length="500" startDelay="0" alternateDisable="back" />
            <onEndScreen name="move" mode="out" direction="right" length="500" startDelay="0" alternateEnable="back" />
		      </effect>
		    </text>
		    <text style="textFont" textHAlign="center" align="center" wrap="false" text="&#01;&#200;&#200;&#00;(written with Nifty 1.1)&#10;&#01;&#200;&#200;&#00;press next in the bottom right corner to continue">
		      <effect>
		        <onStartScreen name="fade" startColor="#ffffff00" endColor="#ffffffff" length="1000" startDelay="1000" />
            <onEndScreen name="fade" startColor="#ffffffff" endColor="#ffffff00" length="500" startDelay="0" />
		        <onEndScreen name="move" mode="out" direction="left" length="500" startDelay="0" alternateDisable="back" />
            <onEndScreen name="move" mode="out" direction="right" length="500" startDelay="0" alternateEnable="back" />
		      </effect>
		    </text>
		  </panel>
		</panel>
	</controlDefinition>

	<!-- page 2 -->
  <controlDefinition name="page2" controller="de.lessvoid.nifty.controls.button.controller.ButtonControl">
    <panel style="pagePanel">
	    <panel style="middlePanel">
	      <text style="captionFont" text="So what exactly is Nifty GUI?" />
	      <text style="textFont" text="Nifty GUI is a Java Library that supports the creation of interactive user interfaces for games or similar applications. It utilizes lwjgl for OpenGL rendering. The configuration of the GUI is stored in xml with supporting Java code.&#10;&#10;In short, Nifty layouts and displays elements on a screen and allows to interact with them.&#10;"/>
	      <text style="captionFont" text="And what is it not?"/>
	      <text style="textFont" text="Nifty is not an application framwork and it is not a Widget Toolkit (like AWT, Swing or even SWT). If you are looking for a more traditional approach or if you need a solution with lots of windows, dialog boxes, lots of controls and so on, you might want to look somewhere else.&#10;&#10;Two great options are:&#10;&#10;- fenggui (http://www.fenggui.org/doku.php)&#10;- twl (http://twl.l33tlabs.org/)&#10;" />
        <text style="captionFont" text="Nifty is different"/>
        <text style="textFont" text="In contrast to those libraries Nifty is probably less standard but it provides more creative freedom and in my humble opinion generally more stuff to play with :) So take this into account when you decide if Nifty is the right tool for you.&#10;&#10;The remaining Pages will give an overview how Nifty works and how you can use it."/>
	    </panel>
	  </panel>
  </controlDefinition>

  <!-- page 3 -->
  <controlDefinition name="page3" controller="de.lessvoid.nifty.controls.button.controller.ButtonControl">
    <panel style="pagePanel">
      <panel style="middlePanel">
        <text style="captionFont" text="How does it work: The Java side" />
        <text style="textFont" text="Nifty is a jar File. So all you need is &quot;nifty.jar&quot; (and depending on what you've downloaded libraries like slick and lwjgl) in your classpath. Initializing lwjgl and setting the display mode is up to you. Nifty assumes that you've set up 2d ortho mode. You can see the examples in the nifty-examples project on how to do that.&#10;&#10;To work with Nifty you'll need to instantiate Nifty first:&#10;"/>
        <panel style="codeBlock">
          <text style="codeFont" text="&#1;&#69;&#69;&#193;// create nifty&#10;&#1;&#0;&#0;&#0;Nifty nifty = &#1;&#138;&#16;&#77;new&#1;&#0;&#0;&#0; Nifty(&#10;    &#1;&#138;&#16;&#77;new&#1;&#0;&#0;&#0; RenderDeviceLwjgl(),&#10;    &#1;&#138;&#16;&#77;new&#1;&#0;&#0;&#0; SoundSystem(&#1;&#138;&#16;&#77;new&#1;&#0;&#0;&#0; SlickSoundDevice()),&#10;&#1;&#0;&#0;&#0;    LwjglInitHelper.getInputSystem(),&#10;    &#1;&#138;&#16;&#77;new&#1;&#0;&#0;&#0; TimeProvider());" />
        </panel>
        <text style="textFont" text="&#10;The Nifty class constructor requires a couple of Subsystem-Implementations for Rendering, Input, Sound and so on. The current Implementations use lwjgl but that might change in the future or it can be changed by yourself to integrate Nifty with other systems.&#10;"/>
        <text style="textFont" text="At the moment it is important that you initialize lwjgl and the lwjgl display mode you want to use before you call Nifty. The loader already uses the dimension of the current display mode for initialisation.&#10;&#10;And now that you've set up Nifty you can call it's render method in your render loop."/>
      </panel>
    </panel>
  </controlDefinition>

  <!-- page 4 -->
  <controlDefinition name="page4" controller="de.lessvoid.nifty.controls.button.controller.ButtonControl">
    <panel style="pagePanel">
      <panel style="middlePanel">
        <text style="captionFont" text="How does it work: The Java side, Render Loop" />
        <text style="textFont" text="For easy integration with your existing lwjgl code, Nifty assumes that you're handling the lwjgl render loop on your own (calling Display.update() for instance). So all you need to do is call nifty.render() at the appropriate time in the render loop. Example:&#10;"/>
        <panel style="codeBlock">
          <text style="codeFont" text="&#1;&#69;&#69;&#193;// render nifty&#10;&#1;&#0;&#0;&#0;&#1;&#138;&#16;&#77;while&#1;&#0;&#0;&#0; (!done) {&#10;    &#1;&#138;&#16;&#77;if&#1;&#0;&#0;&#0; (nifty.render()) {&#10;        &#1;&#69;&#69;&#193;// nifty has reached the end point, stop the rendering loop, change state or do whatever should happen now =)&#10;    &#1;&#0;&#0;&#0;}&#10;    &#1;&#69;&#69;&#193;// render other stuff, call Display.update() and so on&#10;&#1;&#0;&#0;&#0;}"/>
        </panel>
        <text style="textFont" text="&#10;The standard way to define GUIs with Nifty is to store them in xml files and load them from Java. It is now possible to create GUI elements on the fly in Java too but this process is covered later in this tutorial. To load a xml file you can use one of the fromXml() Methods the Nifty instance provides:&#10;"/>
        <panel style="codeBlock">
          <text style="codeFont" text="&#1;&#138;&#16;&#77;public void&#1;&#0;&#0;&#0; fromXml(String filename, String startScreen)&#10;&#1;&#138;&#16;&#77;public void&#1;&#0;&#0;&#0; fromXml(String fileId, InputStream input, String startScreen)" />
        </panel>
        <text style="textFont" text="&#10;This should be self explaining: The first method loads a nifty xml file from a file and the second from an inputStream. The parameter startScreen is the so called screenId of the Nifty screen and tells nifty with which screen the GUI should start. The fileId parameter in the second method is used to identify the loaded xml file in case Nifty needs to decide if a given file has already been loaded. In the first method the filename is used for this purpose.&#10;&#10;And now that you know how to load xml files we'll continue on the next page and show how to actually write Nifty XML!" /> 
      </panel>
    </panel>
  </controlDefinition>

</nifty>